<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant"
         xmlns:ac="antlib:net.sf.antcontrib">
  <!-- Resolve dependencies through Ivy. -->
  <target name="resolve" description="retrieve dependencies with ivy">
    <ivy:retrieve pattern="lib/[artifact](-[classifier]).[ext]"/>
  </target>

  <!-- Include ant-contrib tasks. -->
  <taskdef uri="antlib:net.sf.antcontrib"
           resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="lib/ant-contrib.jar"/>
    </classpath>
  </taskdef>

  <!-- Ignore dist files in res/ directory. -->
  <property name="aapt.ignore.assets" value="*.dist.xml:" />

  <!-- Debug target with pre-processing for NO advertisements. -->
  <target name="debug">
    <antcall target="-generate-from-dist-files">
      <param name="USE_ADS" value="FALSE" />
      <param name="INSTRUCTIONS_AD_UNIT_ID" value="" />
      <param name="CHECKPOINT_AD_UNIT_ID" value="" />
      <param name="GAMEOVER_AD_UNIT_ID" value="" />
    </antcall>
    <antcall target="android_rules.debug" />
  </target>

  <!-- Debug target with pre-processing for advertisements. -->
  <target name="debug-ads">
    <antcall target="-generate-from-dist-files">
      <param name="USE_ADS" value="TRUE" />
      <param name="INSTRUCTIONS_AD_UNIT_ID"
             value="${INSTRUCTIONS_AD_UNIT_ID}" />
      <param name="CHECKPOINT_AD_UNIT_ID" value="${CHECKPOINT_AD_UNIT_ID}" />
      <param name="GAMEOVER_AD_UNIT_ID" value="{GAMEOVER_AD_UNIT_ID}" />
    </antcall>
    <antcall target="android_rules.debug" />
  </target>

  <!-- Several files contain place holders so that advertisements can be
       completely compiled out of the project. This generates those files. -->
  <target name="-generate-from-dist-files">
    <!-- Set properties based on the USE_ADS property -->
    <ac:if>
      <equals arg1="${USE_ADS}" arg2="TRUE" />
      <ac:then>
        <property name="XML_COMMENT_START_WHEN_ADS_OFF" value="" />
        <property name="XML_COMMENT_END_WHEN_ADS_OFF" value="" />
        <property name="JAVA_COMMENT_START_WHEN_ADS_OFF" value="" />
        <property name="JAVA_COMMENT_END_WHEN_ADS_OFF" value="" />
      </ac:then>
      <ac:else>
        <property name="XML_COMMENT_START_WHEN_ADS_OFF" value="&lt;!--" />
        <property name="XML_COMMENT_END_WHEN_ADS_OFF" value="--&gt;" />
        <property name="JAVA_COMMENT_START_WHEN_ADS_OFF" value="/*" />
        <property name="JAVA_COMMENT_END_WHEN_ADS_OFF" value="*/" />
      </ac:else>
    </ac:if>

    <!-- Process the AndroidManifest.xml file. -->
    <echo message="Generating AndroidManifest.xml" />
    <antcall target="-generate-android-manifest" />

    <!-- Process the strings.xml file. -->
    <echo message="Generating res/values/strings.xml" />
    <exec executable="./replace.py">
      <arg value="res/values/strings.dist.xml" />
      <arg value="res/values/strings.xml" />
      <!-- Insert instructions ad unit ID. -->
      <arg value="{{{INSTRUCTIONS_AD_UNIT_ID}}}" />
      <arg value="${INSTRUCTIONS_AD_UNIT_ID}" />
      <!-- Insert checkpoint ad unit ID. -->
      <arg value="{{{CHECKPOINT_AD_UNIT_ID}}}" />
      <arg value="${CHECKPOINT_AD_UNIT_ID}" />
      <!-- Insert gameover ad unit ID. -->
      <arg value="{{{GAMEOVER_AD_UNIT_ID}}}" />
      <arg value="${GAMEOVER_AD_UNIT_ID}" />
    </exec>

    <!-- Process the AdManager.java file. -->
    <echo message="Generating src/info/meoblast001/thugaim/AdManager.java" />
    <exec executable="./replace.py">
      <arg value="src-dist/info/meoblast001/thugaim/AdManager.dist.java" />
      <arg value="src/info/meoblast001/thugaim/AdManager.java" />
      <arg value="//{{{COMMENT_START_WHEN_ADS_OFF}}}" />
      <arg value="${JAVA_COMMENT_START_WHEN_ADS_OFF}" />
      <arg value="//{{{COMMENT_END_WHEN_ADS_OFF}}}" />
      <arg value="${JAVA_COMMENT_END_WHEN_ADS_OFF}" />
    </exec>

    <!-- Process the instructions.xml layout file. -->
    <echo message="Generating res/layout/instructions.xml" />
    <exec executable="./replace.py">
      <arg value="res/layout/instructions.dist.xml" />
      <arg value="res/layout/instructions.xml" />
      <arg value="&lt;COMMENT_WHEN_ADS_OFF&gt;" />
      <arg value="${XML_COMMENT_START_WHEN_ADS_OFF}" />
      <arg value="&lt;/COMMENT_WHEN_ADS_OFF&gt;" />
      <arg value="${XML_COMMENT_END_WHEN_ADS_OFF}" />
    </exec>

    <!-- Process the checkpoint_reached.xml layout file. -->
    <echo message="Generating res/layout/checkpoint_reached.xml" />
    <exec executable="./replace.py">
      <arg value="res/layout/checkpoint_reached.dist.xml" />
      <arg value="res/layout/checkpoint_reached.xml" />
      <arg value="&lt;COMMENT_WHEN_ADS_OFF&gt;" />
      <arg value="${XML_COMMENT_START_WHEN_ADS_OFF}" />
      <arg value="&lt;/COMMENT_WHEN_ADS_OFF&gt;" />
      <arg value="${XML_COMMENT_END_WHEN_ADS_OFF}" />
    </exec>

    <!-- Process the game_over.xml layout file. -->
    <echo message="Generating res/layout/game_over.xml" />
    <exec executable="./replace.py">
      <arg value="res/layout/game_over.dist.xml" />
      <arg value="res/layout/game_over.xml" />
      <arg value="&lt;COMMENT_WHEN_ADS_OFF&gt;" />
      <arg value="${XML_COMMENT_START_WHEN_ADS_OFF}" />
      <arg value="&lt;/COMMENT_WHEN_ADS_OFF&gt;" />
      <arg value="${XML_COMMENT_END_WHEN_ADS_OFF}" />
    </exec>
  </target>

  <!-- Separate target for generating the AndroidManifest.xml file because
       both build and clean targets use it. -->
  <target name="-generate-android-manifest">
    <exec executable="./replace.py">
      <arg value="AndroidManifest.dist.xml" />
      <arg value="AndroidManifest.xml" />
      <arg value="&lt;COMMENT_WHEN_ADS_OFF&gt;" />
      <arg value="${XML_COMMENT_START_WHEN_ADS_OFF}" />
      <arg value="&lt;/COMMENT_WHEN_ADS_OFF&gt;" />
      <arg value="${XML_COMMENT_END_WHEN_ADS_OFF}" />
    </exec>
  </target>

  <!-- Perform Android clean target and then delete auto-generated files. -->
  <target name="clean">
    <!-- Ironically, generate AndroidManifest.xml so that the delete Android
         clean process works, but then delete AndroidManifest.xml immediately
         after that. -->
    <antcall target="-generate-android-manifest" />

    <antcall target="android_rules.clean" />
    <delete file="AndroidManifest.xml" />
    <delete file="res/values/strings.xml" />
    <delete file="src/info/meoblast001/thugaim/AdManager.java" />
    <delete file="res/layout/instructions.xml" />
    <delete file="res/layout/checkpoint_reached.xml" />
    <delete file="res/layout/game_over.xml" />
  </target>
</project>
